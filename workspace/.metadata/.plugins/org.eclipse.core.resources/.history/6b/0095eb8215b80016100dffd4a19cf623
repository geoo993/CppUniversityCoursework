//#include <iostream>

#include "sample.h"
#include "samplet.h"
#include "samplet.cc"

using namespace std;


bool check_special_long_doublee(bool b = false) {

	return b;
}


int main(int argc, char *argv[]) {

	sample a_sample;
	//samplet<long double> a_sample;
	//samplet<double> a_sample;
	//samplet<float> a_sample;
	//samplet<int> a_sample;


	//<6: 7 11 2 13 3 5 >
//	string special_str = "<2: 1.18973e+4932 1.18973e+4932 >";
//	string text_file_name = "cwk-input01.txt";
//
//	 while (cin >> a_sample){
//
//		 //this code for testing sample file and writing the result into a text file
//		 a_sample.test(a_sample, text_file_name);
//
//		 cout << "The output is written in ---> " << text_file_name << endl;
//
//		 {
//			 //question 14: What does your non-generic program print for the following input
//			 a_sample.compute_set_sample(special_str, a_sample);
//			 a_sample.test(a_sample,text_file_name);
//
//			 cout << "This long double number (1.18973e+4932) is the maximum floating number range of a long double. \n"
//					 << "You can prove this by doing: std::numeric_limits< long double >::max() is 1.18973e+4932). \n"
//					 << "Setting this on an integer will give you: -2147483648, \n"
//					 << "which is the minimum limit value of a signed long integer. \n"
//					 << "when set on other types like double or float will just give you: inf, which is the special value \"positive infinity\", \n"
//					 << "a number that I can simply describe as very large." << endl;
//		 }
//
//
//	 }
//	 if (cin.bad())
//		 cerr << "\nBad input\n\n";

	check_special_long_doublee(true);

	cout << check_special_long_doublee(true) << endl;

	return 0;
}
